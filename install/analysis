if [ "$aliddns_name1" = "@" ]
then
  aliddns_name=$aliddns_domain
else
  aliddns_name=$aliddns_name1.$aliddns_domain
fi

now=`date`

die () {
    echo $1
}

if [ "$ipv6" = "on" ]
then
  ips=`ip addr show $dev | grep "inet6.*global" | awk '{print $2}' | awk -F"/" '{print $1}'` || die "$ip"
  # ips=`ip addr show $dev | grep "inet6" | awk '{print $2}' | awk -F"/" '{print $1}'` || die "$ip"
elif [ "$ipv4" = "on" ]
then
  ips=`ip addr show $dev | grep "inet" | awk '{print $2}' | awk -F"/" '{print $1}'` || die "$ip"
fi

for ip in $ips
do
  #ip = $ips
  break
done
echo $ip

current_ipv6=`nslookup -query=AAAA $aliddns_name 2>&1`
#echo $current_ipv6

current_ipv6=`echo "$current_ipv6" | grep 'Address: ' | tail -n1 | awk '{print $NF}'`
#echo $current_ipv6

if [ "$?" -eq "0" ]
then
    current_ipv6=`echo "$current_ipv6" | grep 'Address: ' | tail -n1 | awk '{print $NF}'`
#   echo $current_ipv6

    if [ "$ipv6" = "$current_ipv6" ]
    then
        echo "skipping"
    fi 
# fix when A record removed by manual dns is always update error
else
    unset aliddns_record_id
fi


timestamp=`date -u "+%Y-%m-%dT%H%%3A%M%%3A%SZ"`
echo $timestamp

urlencode() {
    # urlencode <string>
    out=""
    while read -n1 c
    do
        case $c in
            [a-zA-Z0-9._-]) out="$out$c" ;;
            *) out="$out`printf '%%%02X' "'$c"`" ;;
        esac
    done
    echo -n $out
}

enc() {
    echo -n "$1" | urlencode
}

send_request() {
    local args="AccessKeyId=$aliddns_ak&Action=$1&Format=json&$2&Version=2015-01-09"
    local hash=$(echo -n "GET&%2F&$(enc "$args")" | openssl dgst -sha1 -hmac "$aliddns_sk&" -binary | openssl base64)
    curl -s "http://alidns.aliyuncs.com/?$args&Signature=$(enc "$hash")"
}

get_recordid() {
    grep -Eo '"RecordId":"[0-9]+"' | cut -d':' -f2 | tr -d '"'
}

query_recordid6() {
    send_request "DescribeSubDomainRecords" "SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&SubDomain=$aliddns_name&Timestamp=$timestamp&Type=AAAA"
}
query_recordid4() {
    send_request "DescribeSubDomainRecords" "SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&SubDomain=$aliddns_name&Timestamp=$timestamp&Type=A"
}

update_record6() {
    send_request "UpdateDomainRecord" "RR=$aliddns_name1&RecordId=$1&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&TTL=$aliddns_ttl&Timestamp=$timestamp&Type=AAAA&Value=$(enc $ip)"
}
update_record4() {
    send_request "UpdateDomainRecord" "RR=$aliddns_name1&RecordId=$1&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&TTL=$aliddns_ttl&Timestamp=$timestamp&Type=A&Value=$(enc $ip)"
}

add_record6() {
    send_request "AddDomainRecord&DomainName=$aliddns_domain" "RR=$aliddns_name1&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&TTL=$aliddns_ttl&Timestamp=$timestamp&Type=AAAA&Value=$(enc $ip)"
}
add_record4() {
    send_request "AddDomainRecord&DomainName=$aliddns_domain" "RR=$aliddns_name1&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&TTL=$aliddns_ttl&Timestamp=$timestamp&Type=A&Value=$(enc $ip)"
}

#add support */%2A and @/%40 record


if [ "$aliddns_record_id" = "" ]
then
    if [ "$ipv6" = "on" ]
    then
        aliddns_record_id=`query_recordid6 | get_recordid`
    elif [ "$ipv4" = "on" ]
    then
        aliddns_record_id=`query_recordid4 | get_recordid`
    fi
    echo '-----------------' $aliddns_record_id
fi
if [ "$aliddns_record_id" = "" ]
then
    if [ "$ipv6" = "on" ]
    then
        aliddns_record_id=`add_record6 | get_recordid`
    elif [ "$ipv4" = "on" ]
    then
        aliddns_record_id=`add_record4 | get_recordid`
    fi
    echo "added record $aliddns_record_id"
else
    [[ "ipv6" = "on" ]]&&update_record6 $aliddns_record_id
    [[ "ipv4" = "on" ]]&&update_record4 $aliddns_record_id
    echo "updated record $aliddns_record_id"
fi
echo "############# finished #############"
